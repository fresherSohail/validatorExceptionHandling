package validatorExcepHandling.com.validatorExcepHandling.advice;

import java.util.HashMap;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import validatorExcepHandling.com.validatorExcepHandling.exception.UserNotFoundException;

@RestControllerAdvice
public class AppExceptionHandler {

	@ResponseStatus(HttpStatus.BAD_REQUEST)
	@ExceptionHandler(MethodArgumentNotValidException.class)
	public Map<String, String> handleIllegalArg(MethodArgumentNotValidException ex){
		Map<String, String> getMap = new HashMap<>();
		ex.getBindingResult().getFieldErrors().forEach(error->{
			getMap.put(error.getField(), error.getDefaultMessage());
		});
		return getMap;
	}
	
	@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
	@ExceptionHandler(UserNotFoundException.class)
	public Map<String, String> handleBusinessExcepton(UserNotFoundException ex){
		Map<String, String> errorMap = new HashMap<>();
		errorMap.put("errorMessage", ex.getMessage());
		return errorMap;
	}
	
}
